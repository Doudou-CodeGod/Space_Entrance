{"version":3,"file":"main-a224f317.js","sources":["../../node_modules/three/examples/jsm/shaders/DotScreenShader.js","../../node_modules/three/examples/jsm/postprocessing/DotScreenPass.js","../../src/space0.js"],"sourcesContent":["import {\n\tVector2\n} from 'three';\n\n/**\n * Dot screen shader\n * based on glfx.js sepia shader\n * https://github.com/evanw/glfx.js\n */\n\nconst DotScreenShader = {\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'tSize': { value: new Vector2( 256, 256 ) },\n\t\t'center': { value: new Vector2( 0.5, 0.5 ) },\n\t\t'angle': { value: 1.57 },\n\t\t'scale': { value: 1.0 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform vec2 center;\n\t\tuniform float angle;\n\t\tuniform float scale;\n\t\tuniform vec2 tSize;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tfloat pattern() {\n\n\t\t\tfloat s = sin( angle ), c = cos( angle );\n\n\t\t\tvec2 tex = vUv * tSize - center;\n\t\t\tvec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\n\n\t\t\treturn ( sin( point.x ) * sin( point.y ) ) * 4.0;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvec4 color = texture2D( tDiffuse, vUv );\n\n\t\t\tfloat average = ( color.r + color.g + color.b ) / 3.0;\n\n\t\t\tgl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\n\n\t\t}`\n\n};\n\nexport { DotScreenShader };\n","import {\n\tShaderMaterial,\n\tUniformsUtils\n} from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { DotScreenShader } from '../shaders/DotScreenShader.js';\n\nclass DotScreenPass extends Pass {\n\n\tconstructor( center, angle, scale ) {\n\n\t\tsuper();\n\n\t\tconst shader = DotScreenShader;\n\n\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\tif ( center !== undefined ) this.uniforms[ 'center' ].value.copy( center );\n\t\tif ( angle !== undefined ) this.uniforms[ 'angle' ].value = angle;\n\t\tif ( scale !== undefined ) this.uniforms[ 'scale' ].value = scale;\n\n\t\tthis.material = new ShaderMaterial( {\n\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t\tthis.fsQuad = new FullScreenQuad( this.material );\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tthis.uniforms[ 'tDiffuse' ].value = readBuffer.texture;\n\t\tthis.uniforms[ 'tSize' ].value.set( readBuffer.width, readBuffer.height );\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\tif ( this.clear ) renderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n\tdispose() {\n\n\t\tthis.material.dispose();\n\n\t\tthis.fsQuad.dispose();\n\n\t}\n\n}\n\nexport { DotScreenPass };\n","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { Reflector } from 'three/examples/jsm/objects/Reflector.js';\nimport { TextureLoader } from 'three';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { DotScreenPass } from 'three/examples/jsm/postprocessing/DotScreenPass.js';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass.js';\nimport { FocusShader } from 'three/examples/jsm/shaders/FocusShader.js';\nimport { initKeyboardControls } from './keyboardCameraControl.js';\n\n\n\nconst myTexture = new TextureLoader()\n\nlet camera, scene, renderer;\n\nlet cameraControls;\nlet groundMirror;\nlet composer, effectFocus;\n\n\nlet planeFrontMaterial2;\nlet planeFrontGlowMaterial2;\nlet gltfCube;\n\n\nTHREE.ColorManagement.enabled = true;\n\n\n\ninit();\ninitGUI(); // Add this line after the init() function call\naddGLTFModel(50, 0, 0, 0, -Math.PI / 4, 0, 'models/Human LowPoly.gltf');\naddGLTFModel(-50, 0, -80, 0, 0, 0, 'models/Human LowPoly.gltf');\naddGLTFModel(-20, 0, -150, 0, Math.PI / 5, 0, 'models/Human LowPoly.gltf');\naddGLTFCube(0, 30, 10, -Math.PI/6, Math.PI / 4, 0, 'models/cube logo.gltf');\nwindow.addEventListener('resize', onWindowResize); // Add this line\nanimate();\n\n//glt models\nfunction addGLTFModel(x, y, z, rx, ry, rz, modelPath, scaleX = 0.5, scaleY = 0.5, scaleZ = 0.5) {\n  const loader = new GLTFLoader();\n  loader.load(\n    modelPath,\n    (gltf) => {\n        gltf.scene.position.set(x, y, z);\n        gltf.scene.rotation.set(rx, ry, rz);\n        gltf.scene.scale.set(scaleX, scaleY, scaleZ);\n        scene.add(gltf.scene);\n      },\n      (xhr) => {\n        console.log((xhr.loaded / xhr.total) * 100 + '% loaded');\n      },\n      (error) => {\n        console.error('An error occurred while loading the GLTF model:', error);\n      }\n    );\n}\n\n\nfunction addGLTFCube(x, y, z, rx, ry, rz, modelPath, scaleX = 0.5, scaleY = 0.5, scaleZ = 0.5) {\n  const loader1 = new GLTFLoader();\n  loader1.load(\n    modelPath,\n    (gltf) => {\n        gltf.scene.position.set(x, y, z);\n        gltf.scene.rotation.set(rx, ry, rz);\n        gltf.scene.scale.set(scaleX, scaleY, scaleZ);\n        scene.add(gltf.scene);\n\n\n        gltfCube = gltf.scene; \n      },\n      (xhr) => {\n        console.log((xhr.loaded / xhr.total) * 100 + '% loaded');\n      },\n      (error) => {\n        console.error('An error occurred while loading the GLTF model:', error);\n      }\n    );\n}\n\n\n\n  function createNoiseTexture(width, height) {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n  \n    const ctx = canvas.getContext('2d');\n    const imgData = ctx.createImageData(width, height);\n  \n    for (let i = 0; i < imgData.data.length; i += 4) {\n      const gray = Math.floor(Math.random() * 255);\n      imgData.data[i] = gray;\n      imgData.data[i + 1] = gray;\n      imgData.data[i + 2] = gray;\n      imgData.data[i + 3] = 255;\n    }\n  \n    ctx.putImageData(imgData, 0, 0);\n  \n    const texture = new THREE.CanvasTexture(canvas);\n    texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n    texture.repeat.set(50, 50);\n  \n    return texture;\n  }\n\nfunction createVideoTexture(videoElement) {\n    const videoTexture = new THREE.VideoTexture(videoElement);\n    videoTexture.minFilter = THREE.LinearFilter;\n    videoTexture.magFilter = THREE.LinearFilter;\n    videoTexture.format = THREE.RGBFormat;\n    return videoTexture;\n  }\n\nfunction init() {\n    const container = document.getElementById('container');\n\n// renderer\n    renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    container.appendChild(renderer.domElement);\n  \n// scene\n    scene = new THREE.Scene();\n  \n// camera\n    camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 50000);\n    camera.position.set(-10, 34, -340);\n    camera.rotation.set(0,3,0);\n  \n    cameraControls = new OrbitControls(camera, renderer.domElement);\n    cameraControls.target.set(0, 50, 0);\n    cameraControls.maxDistance = 1500;\n    cameraControls.minDistance = 10;\n    cameraControls.update();\n  \n// Initialize the composer variable\n   composer = new EffectComposer(renderer);\n   const renderPass = new RenderPass(scene, camera);\n   composer.addPass(renderPass);\n\n  // Add DotScreenPass to the composer\n  const dotScreenPass = new DotScreenPass();\n  composer.addPass(dotScreenPass);\n\n\t\t\t\t// postprocessing\n\n\t\t\t\tconst renderModel = new RenderPass( scene, camera );\n\t\t\t\t//const effectBloom = new BloomPass( 0.7 );\n\t\t\t\tconst effectFilm = new FilmPass( 0.5, 0.5, 10, false );\n\n\t\t\t\teffectFocus = new ShaderPass( FocusShader );\n\n\t\t\t\teffectFocus.uniforms[ 'screenWidth' ].value = window.innerWidth * window.devicePixelRatio;\n\t\t\t\teffectFocus.uniforms[ 'screenHeight' ].value = window.innerHeight * window.devicePixelRatio;\n\n\t\t\t\tcomposer = new EffectComposer( renderer );\n\n\t\t\t\tcomposer.addPass( renderModel );\n\t\t\t\t//composer.addPass( effectBloom );\n\t\t\t\tcomposer.addPass( effectFilm );\n\t\t\t composer.addPass( effectFocus );\n\n\n//\n\n    const planeGeo = new THREE.PlaneGeometry( 200, 100 );\n    const planeGeo2 = new THREE.PlaneGeometry( 2000, 2000 );\n\n// reflectors/mirrors\n\n    let geometry, material;\n\n    const noiseTexture = createNoiseTexture(512, 512);\n    const roughnessMap = noiseTexture;\n    \n    geometry = new THREE.PlaneGeometry(5000, 5000);\n\n    \n    groundMirror = new Reflector(geometry, {\n      clipBias: 0.002,\n      textureWidth: window.innerWidth * window.devicePixelRatio,\n      textureHeight: window.innerHeight * window.devicePixelRatio,\n      color: 0x777777,\n    });\n\n    groundMirror.rotateX( - Math.PI / 2 );\n    scene.add( groundMirror );\n\n\n// walls\n\n\n    const video = document.getElementById('myVideo');\n    const videoTexture = createVideoTexture(video);\n    video.play();\n    \n    const planeFrontMaterial = new THREE.MeshBasicMaterial({ map: videoTexture });\n    const planeFrontGlowMaterial = new THREE.MeshBasicMaterial({\n      color: 0xffffff,\n      transparent: true,\n      opacity: 0.3,\n      blending: THREE.AdditiveBlending,\n    });\n    \n    const planeFront = new THREE.Mesh(planeGeo, planeFrontMaterial);\n    planeFront.position.z = 50;\n    planeFront.position.y = 70;\n    \n    planeFront.rotateY(Math.PI);\n    scene.add(planeFront);\n\n    \n    \n    const planeFrontGlow = new THREE.Mesh(planeGeo, planeFrontGlowMaterial);\n    planeFrontGlow.name = 'planeFrontGlow';\n    planeFrontGlow.position.z = 50;\n    planeFrontGlow.position.y = 70;\n    planeFrontGlow.rotateY(Math.PI);\n    scene.add(planeFrontGlow);\n    \n// new BG wall\n    // Create new MeshPhysicalMaterial for planeFront2\n    planeFrontMaterial2 = new THREE.MeshPhysicalMaterial({\n      map: videoTexture,\n      color: 0xffffff,\n      emissive: 0x000000,\n      roughness: 0.5,\n      metalness: 0.5,\n      //opacity: 0.06\n    });\n\n    // Create new MeshPhysicalMaterial for planeFrontGlow2\n    planeFrontGlowMaterial2 = new THREE.MeshPhysicalMaterial({\n      color: 0xffffff,\n      emissive: 0xffffff,\n      roughness: 0.5,\n      metalness: 0.5,\n      transparent: true,\n      opacity: 0.06,\n      blending: THREE.AdditiveBlending,\n    });\n\n// Duplicate planeFront as planeFront2\nconst planeFront2 = new THREE.Mesh(planeGeo2, planeFrontMaterial2);\nplaneFront2.position.z = 60;\nplaneFront2.position.y = 70;\nplaneFront2.rotateY(Math.PI);\nscene.add(planeFront2);\n\n// Duplicate planeFrontGlow as planeFrontGlow2\n//const planeFrontGlow2 = new THREE.Mesh(planeGeo2, planeFrontMaterial2);\n//planeFrontGlow2.position.y = 0;\n//planeFrontGlow2.rotateX( - Math.PI / 2 );\n\n//scene.add(planeFrontGlow2);\n\n\n\n // lights\n  const mainLight = new THREE.PointLight(0xe7e7e7, 50, 60);\n  mainLight.position.y = 50;\n  mainLight.position.z = -30;\n  mainLight.name = 'mainLight';\n  scene.add(mainLight);\n\n  const subLight = new THREE.PointLight(0xe7e7e7, 1.8, 250);\n  subLight.position.y = 60;\n  subLight.name = 'subLight';\n  scene.add(subLight);\n\n//\n    window.addEventListener( 'resize', onWindowResize );\n  \n    onWindowResize(); \n}\n\n//GUI\nfunction initGUI() {\n  const gui = new dat.GUI();\n\n  // Camera position\n  const cameraFolder = gui.addFolder('Camera');\n  cameraFolder.add(camera.position, 'x', -500, 500).name('Position X');\n  cameraFolder.add(camera.position, 'y', -500, 500).name('Position Y');\n  cameraFolder.add(camera.position, 'z', -500, 500).name('Position Z');\n\n  // Camera rotation\n  cameraFolder.add(camera.rotation, 'x', -Math.PI, Math.PI).name('Rotation X');\n  cameraFolder.add(camera.rotation, 'y', -Math.PI, Math.PI).name('Rotation Y');\n  cameraFolder.add(camera.rotation, 'z', -Math.PI, Math.PI).name('Rotation Z');\n\n   // Add a new folder for Plane Front Glow properties\n  const planeFrontGlowFolder = gui.addFolder('Plane Front Glow');\n  const planeFrontGlow = scene.getObjectByName('planeFrontGlow');\n\n  // Add GUI for Plane Front Glow color and opacity (power)\n  planeFrontGlowFolder.addColor(planeFrontGlow.material, 'color').name('Color');\n  planeFrontGlowFolder.add(planeFrontGlow.material, 'opacity', 0, 1).name('Power');\n\n  // Light settings\n  const lightFolder = gui.addFolder('Light');\n  const mainLight = scene.getObjectByName('mainLight');\n  lightFolder.addColor(mainLight, 'color').name('Color');\n  lightFolder.add(mainLight.position, 'x', -100, 100).name('Position X');\n  lightFolder.add(mainLight.position, 'y', -100, 100).name('Position Y');\n  lightFolder.add(mainLight.position, 'z', -100, 100).name('Position Z');\n  lightFolder.add(mainLight.rotation, 'x',-Math.PI, Math.PI).name('rotation X');\n  lightFolder.add(mainLight.rotation, 'y', -Math.PI, Math.PI).name('rotation Y');\n  lightFolder.add(mainLight.rotation, 'z', -Math.PI, Math.PI).name('rotation Z');\n\n  const targetFolder = gui.addFolder('Target');\n  targetFolder.add(cameraControls.target, 'x', -100, 100).name('Target X');\n  targetFolder.add(cameraControls.target, 'y', -100, 100).name('Target Y');\n  targetFolder.add(cameraControls.target, 'z', -100, 100).name('Target Z');\n\n  gui.hide();\n}\n\nfunction onWindowResize() {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n\n  renderer.setSize(window.innerWidth, window.innerHeight);\n\n  groundMirror.getRenderTarget().setSize(\n      window.innerWidth * window.devicePixelRatio,\n      window.innerHeight * window.devicePixelRatio\n  );\n\n  // Update composer size\n  composer.setSize(window.innerWidth, window.innerHeight);\n\n  // Update effectFocus uniforms\n  effectFocus.uniforms['screenWidth'].value = window.innerWidth * window.devicePixelRatio;\n  effectFocus.uniforms['screenHeight'].value = window.innerHeight * window.devicePixelRatio;\n}\ninitKeyboardControls(camera);\n\nfunction animate() {\n  requestAnimationFrame(animate);\n\n  const timer = Date.now() * 0.01;\n\n  if (gltfCube) {\n    gltfCube.rotation.y -= 0.005; // Rotate the GLTFCube\n  }\n  // composer is now accessible here\n  composer.render();\n}"],"names":["DotScreenShader","Vector2","DotScreenPass","Pass","center","angle","scale","shader","UniformsUtils","ShaderMaterial","FullScreenQuad","renderer","writeBuffer","readBuffer","TextureLoader","camera","scene","cameraControls","groundMirror","composer","effectFocus","planeFrontMaterial2","gltfCube","THREE.ColorManagement","init","initGUI","addGLTFModel","addGLTFCube","onWindowResize","animate","x","y","z","rx","ry","rz","modelPath","scaleX","scaleY","scaleZ","GLTFLoader","gltf","xhr","error","createNoiseTexture","width","height","canvas","ctx","imgData","i","gray","texture","THREE.CanvasTexture","THREE.RepeatWrapping","createVideoTexture","videoElement","videoTexture","THREE.VideoTexture","THREE.LinearFilter","THREE.RGBFormat","container","THREE.WebGLRenderer","THREE.Scene","THREE.PerspectiveCamera","OrbitControls","EffectComposer","renderPass","RenderPass","dotScreenPass","renderModel","effectFilm","FilmPass","ShaderPass","FocusShader","planeGeo","THREE.PlaneGeometry","planeGeo2","geometry","Reflector","video","planeFrontMaterial","THREE.MeshBasicMaterial","planeFrontGlowMaterial","THREE.AdditiveBlending","planeFront","THREE.Mesh","planeFrontGlow","THREE.MeshPhysicalMaterial","planeFront2","mainLight","THREE.PointLight","subLight","gui","cameraFolder","planeFrontGlowFolder","lightFolder","targetFolder","initKeyboardControls"],"mappings":"wWAUA,MAAMA,GAAkB,CAEvB,SAAU,CAET,SAAY,CAAE,MAAO,IAAM,EAC3B,MAAS,CAAE,MAAO,IAAIC,EAAS,IAAK,GAAG,CAAI,EAC3C,OAAU,CAAE,MAAO,IAAIA,EAAS,GAAK,EAAG,CAAI,EAC5C,MAAS,CAAE,MAAO,IAAM,EACxB,MAAS,CAAE,MAAO,CAAK,CAEvB,EAED,aAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWxB,eAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAgC3B,EC1DA,MAAMC,WAAsBC,EAAK,CAEhC,YAAaC,EAAQC,EAAOC,EAAQ,CAEnC,QAEA,MAAMC,EAASP,GAEf,KAAK,SAAWQ,EAAc,MAAOD,EAAO,QAAQ,EAE/CH,IAAW,QAAY,KAAK,SAAU,OAAW,MAAM,KAAMA,GAC7DC,IAAU,SAAY,KAAK,SAAU,MAAU,MAAQA,GACvDC,IAAU,SAAY,KAAK,SAAU,MAAU,MAAQA,GAE5D,KAAK,SAAW,IAAIG,EAAgB,CAEnC,SAAU,KAAK,SACf,aAAcF,EAAO,aACrB,eAAgBA,EAAO,cAE1B,GAEE,KAAK,OAAS,IAAIG,GAAgB,KAAK,QAAQ,CAE/C,CAED,OAAQC,EAAUC,EAAaC,EAA0C,CAExE,KAAK,SAAU,SAAa,MAAQA,EAAW,QAC/C,KAAK,SAAU,MAAU,MAAM,IAAKA,EAAW,MAAOA,EAAW,QAE5D,KAAK,gBAETF,EAAS,gBAAiB,MAC1B,KAAK,OAAO,OAAQA,KAIpBA,EAAS,gBAAiBC,GACrB,KAAK,OAAQD,EAAS,MAAK,EAChC,KAAK,OAAO,OAAQA,GAIrB,CAED,SAAU,CAET,KAAK,SAAS,UAEd,KAAK,OAAO,SAEZ,CAEF,CC9CkB,IAAIG,EAEtB,IAAIC,EAAQC,EAAOL,EAEfM,EACAC,EACAC,EAAUC,EAGVC,EAEAC,EAGJC,EAAsB,QAAU,GAIhCC,KACAC,KACAC,EAAa,GAAI,EAAG,EAAG,EAAG,CAAC,KAAK,GAAK,EAAG,EAAG,2BAA2B,EACtEA,EAAa,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,2BAA2B,EAC9DA,EAAa,IAAK,EAAG,KAAM,EAAG,KAAK,GAAK,EAAG,EAAG,2BAA2B,EACzEC,GAAY,EAAG,GAAI,GAAI,CAAC,KAAK,GAAG,EAAG,KAAK,GAAK,EAAG,EAAG,uBAAuB,EAC1E,OAAO,iBAAiB,SAAUC,CAAc,EAChDC,IAGA,SAASH,EAAaI,EAAGC,EAAGC,EAAGC,EAAIC,EAAIC,EAAIC,EAAWC,EAAS,GAAKC,EAAS,GAAKC,EAAS,GAAK,CAC/E,IAAIC,IACZ,KACLJ,EACCK,GAAS,CACNA,EAAK,MAAM,SAAS,IAAIX,EAAGC,EAAGC,CAAC,EAC/BS,EAAK,MAAM,SAAS,IAAIR,EAAIC,EAAIC,CAAE,EAClCM,EAAK,MAAM,MAAM,IAAIJ,EAAQC,EAAQC,CAAM,EAC3CvB,EAAM,IAAIyB,EAAK,KAAK,CACrB,EACAC,GAAQ,CACP,QAAQ,IAAKA,EAAI,OAASA,EAAI,MAAS,IAAM,UAAU,CACxD,EACAC,GAAU,CACT,QAAQ,MAAM,kDAAmDA,CAAK,CACvE,CACP,CACA,CAGA,SAAShB,GAAYG,EAAGC,EAAGC,EAAGC,EAAIC,EAAIC,EAAIC,EAAWC,EAAS,GAAKC,EAAS,GAAKC,EAAS,GAAK,CAC7E,IAAIC,IACZ,KACNJ,EACCK,GAAS,CACNA,EAAK,MAAM,SAAS,IAAIX,EAAGC,EAAGC,CAAC,EAC/BS,EAAK,MAAM,SAAS,IAAIR,EAAIC,EAAIC,CAAE,EAClCM,EAAK,MAAM,MAAM,IAAIJ,EAAQC,EAAQC,CAAM,EAC3CvB,EAAM,IAAIyB,EAAK,KAAK,EAGpBnB,EAAWmB,EAAK,KACjB,EACAC,GAAQ,CACP,QAAQ,IAAKA,EAAI,OAASA,EAAI,MAAS,IAAM,UAAU,CACxD,EACAC,GAAU,CACT,QAAQ,MAAM,kDAAmDA,CAAK,CACvE,CACP,CACA,CAIE,SAASC,GAAmBC,EAAOC,EAAQ,CACzC,MAAMC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,MAAQF,EACfE,EAAO,OAASD,EAEhB,MAAME,EAAMD,EAAO,WAAW,IAAI,EAC5BE,EAAUD,EAAI,gBAAgBH,EAAOC,CAAM,EAEjD,QAASI,EAAI,EAAGA,EAAID,EAAQ,KAAK,OAAQC,GAAK,EAAG,CAC/C,MAAMC,EAAO,KAAK,MAAM,KAAK,OAAM,EAAK,GAAG,EAC3CF,EAAQ,KAAKC,CAAC,EAAIC,EAClBF,EAAQ,KAAKC,EAAI,CAAC,EAAIC,EACtBF,EAAQ,KAAKC,EAAI,CAAC,EAAIC,EACtBF,EAAQ,KAAKC,EAAI,CAAC,EAAI,GACvB,CAEDF,EAAI,aAAaC,EAAS,EAAG,CAAC,EAE9B,MAAMG,EAAU,IAAIC,EAAoBN,CAAM,EAC9C,OAAAK,EAAQ,MAAQA,EAAQ,MAAQE,EAChCF,EAAQ,OAAO,IAAI,GAAI,EAAE,EAElBA,CACR,CAEH,SAASG,GAAmBC,EAAc,CACtC,MAAMC,EAAe,IAAIC,EAAmBF,CAAY,EACxD,OAAAC,EAAa,UAAYE,EACzBF,EAAa,UAAYE,EACzBF,EAAa,OAASG,EACfH,CACR,CAEH,SAASjC,IAAO,CACZ,MAAMqC,EAAY,SAAS,eAAe,WAAW,EAGrDlD,EAAW,IAAImD,EAAoB,CAAE,UAAW,EAAM,CAAA,EACtDnD,EAAS,cAAc,OAAO,gBAAgB,EAC9CA,EAAS,QAAQ,OAAO,WAAY,OAAO,WAAW,EACtDkD,EAAU,YAAYlD,EAAS,UAAU,EAGzCK,EAAQ,IAAI+C,EAGZhD,EAAS,IAAIiD,EAAwB,GAAI,OAAO,WAAa,OAAO,YAAa,EAAG,GAAK,EACzFjD,EAAO,SAAS,IAAI,IAAK,GAAI,IAAI,EACjCA,EAAO,SAAS,IAAI,EAAE,EAAE,CAAC,EAEzBE,EAAiB,IAAIgD,EAAclD,EAAQJ,EAAS,UAAU,EAC9DM,EAAe,OAAO,IAAI,EAAG,GAAI,CAAC,EAClCA,EAAe,YAAc,KAC7BA,EAAe,YAAc,GAC7BA,EAAe,OAAM,EAGtBE,EAAW,IAAI+C,EAAevD,CAAQ,EACtC,MAAMwD,EAAa,IAAIC,EAAWpD,EAAOD,CAAM,EAC/CI,EAAS,QAAQgD,CAAU,EAG5B,MAAME,EAAgB,IAAInE,GAC1BiB,EAAS,QAAQkD,CAAa,EAI5B,MAAMC,EAAc,IAAIF,EAAYpD,EAAOD,CAAM,EAE3CwD,EAAa,IAAIC,GAAU,GAAK,GAAK,GAAI,IAE/CpD,EAAc,IAAIqD,GAAYC,IAE9BtD,EAAY,SAAU,YAAgB,MAAQ,OAAO,WAAa,OAAO,iBACzEA,EAAY,SAAU,aAAiB,MAAQ,OAAO,YAAc,OAAO,iBAE3ED,EAAW,IAAI+C,EAAgBvD,GAE/BQ,EAAS,QAASmD,GAElBnD,EAAS,QAASoD,GAClBpD,EAAS,QAASC,GAKlB,MAAMuD,EAAW,IAAIC,EAAqB,IAAK,GAAG,EAC5CC,EAAY,IAAID,EAAqB,IAAM,GAAI,EAIlD,IAACE,EAEiBlC,GAAmB,IAAK,GAAG,EAGhDkC,EAAW,IAAIF,EAAoB,IAAM,GAAI,EAG7C1D,EAAe,IAAI6D,EAAUD,EAAU,CACrC,SAAU,KACV,aAAc,OAAO,WAAa,OAAO,iBACzC,cAAe,OAAO,YAAc,OAAO,iBAC3C,MAAO,OACb,CAAK,EAED5D,EAAa,QAAS,CAAE,KAAK,GAAK,CAAC,EACnCF,EAAM,IAAKE,GAMX,MAAM8D,EAAQ,SAAS,eAAe,SAAS,EACzCvB,EAAeF,GAAmByB,CAAK,EAC7CA,EAAM,KAAI,EAEV,MAAMC,EAAqB,IAAIC,EAAwB,CAAE,IAAKzB,CAAc,CAAA,EACtE0B,EAAyB,IAAID,EAAwB,CACzD,MAAO,SACP,YAAa,GACb,QAAS,GACT,SAAUE,CAChB,CAAK,EAEKC,EAAa,IAAIC,EAAWX,EAAUM,CAAkB,EAC9DI,EAAW,SAAS,EAAI,GACxBA,EAAW,SAAS,EAAI,GAExBA,EAAW,QAAQ,KAAK,EAAE,EAC1BrE,EAAM,IAAIqE,CAAU,EAIpB,MAAME,EAAiB,IAAID,EAAWX,EAAUQ,CAAsB,EACtEI,EAAe,KAAO,iBACtBA,EAAe,SAAS,EAAI,GAC5BA,EAAe,SAAS,EAAI,GAC5BA,EAAe,QAAQ,KAAK,EAAE,EAC9BvE,EAAM,IAAIuE,CAAc,EAIxBlE,EAAsB,IAAImE,EAA2B,CACnD,IAAK/B,EACL,MAAO,SACP,SAAU,EACV,UAAW,GACX,UAAW,EAEjB,CAAK,EAGyB,IAAI+B,EAA2B,CACvD,MAAO,SACP,SAAU,SACV,UAAW,GACX,UAAW,GACX,YAAa,GACb,QAAS,IACT,SAAUJ,CAChB,CAAK,EAGL,MAAMK,EAAc,IAAIH,EAAWT,EAAWxD,CAAmB,EACjEoE,EAAY,SAAS,EAAI,GACzBA,EAAY,SAAS,EAAI,GACzBA,EAAY,QAAQ,KAAK,EAAE,EAC3BzE,EAAM,IAAIyE,CAAW,EAYnB,MAAMC,EAAY,IAAIC,EAAiB,SAAU,GAAI,EAAE,EACvDD,EAAU,SAAS,EAAI,GACvBA,EAAU,SAAS,EAAI,IACvBA,EAAU,KAAO,YACjB1E,EAAM,IAAI0E,CAAS,EAEnB,MAAME,EAAW,IAAID,EAAiB,SAAU,IAAK,GAAG,EACxDC,EAAS,SAAS,EAAI,GACtBA,EAAS,KAAO,WAChB5E,EAAM,IAAI4E,CAAQ,EAGhB,OAAO,iBAAkB,SAAUhE,GAEnCA,GACJ,CAGA,SAASH,IAAU,CACjB,MAAMoE,EAAM,IAAI,IAAI,IAGdC,EAAeD,EAAI,UAAU,QAAQ,EAC3CC,EAAa,IAAI/E,EAAO,SAAU,IAAK,KAAM,GAAG,EAAE,KAAK,YAAY,EACnE+E,EAAa,IAAI/E,EAAO,SAAU,IAAK,KAAM,GAAG,EAAE,KAAK,YAAY,EACnE+E,EAAa,IAAI/E,EAAO,SAAU,IAAK,KAAM,GAAG,EAAE,KAAK,YAAY,EAGnE+E,EAAa,IAAI/E,EAAO,SAAU,IAAK,CAAC,KAAK,GAAI,KAAK,EAAE,EAAE,KAAK,YAAY,EAC3E+E,EAAa,IAAI/E,EAAO,SAAU,IAAK,CAAC,KAAK,GAAI,KAAK,EAAE,EAAE,KAAK,YAAY,EAC3E+E,EAAa,IAAI/E,EAAO,SAAU,IAAK,CAAC,KAAK,GAAI,KAAK,EAAE,EAAE,KAAK,YAAY,EAG3E,MAAMgF,EAAuBF,EAAI,UAAU,kBAAkB,EACvDN,EAAiBvE,EAAM,gBAAgB,gBAAgB,EAG7D+E,EAAqB,SAASR,EAAe,SAAU,OAAO,EAAE,KAAK,OAAO,EAC5EQ,EAAqB,IAAIR,EAAe,SAAU,UAAW,EAAG,CAAC,EAAE,KAAK,OAAO,EAG/E,MAAMS,EAAcH,EAAI,UAAU,OAAO,EACnCH,EAAY1E,EAAM,gBAAgB,WAAW,EACnDgF,EAAY,SAASN,EAAW,OAAO,EAAE,KAAK,OAAO,EACrDM,EAAY,IAAIN,EAAU,SAAU,IAAK,KAAM,GAAG,EAAE,KAAK,YAAY,EACrEM,EAAY,IAAIN,EAAU,SAAU,IAAK,KAAM,GAAG,EAAE,KAAK,YAAY,EACrEM,EAAY,IAAIN,EAAU,SAAU,IAAK,KAAM,GAAG,EAAE,KAAK,YAAY,EACrEM,EAAY,IAAIN,EAAU,SAAU,IAAI,CAAC,KAAK,GAAI,KAAK,EAAE,EAAE,KAAK,YAAY,EAC5EM,EAAY,IAAIN,EAAU,SAAU,IAAK,CAAC,KAAK,GAAI,KAAK,EAAE,EAAE,KAAK,YAAY,EAC7EM,EAAY,IAAIN,EAAU,SAAU,IAAK,CAAC,KAAK,GAAI,KAAK,EAAE,EAAE,KAAK,YAAY,EAE7E,MAAMO,EAAeJ,EAAI,UAAU,QAAQ,EAC3CI,EAAa,IAAIhF,EAAe,OAAQ,IAAK,KAAM,GAAG,EAAE,KAAK,UAAU,EACvEgF,EAAa,IAAIhF,EAAe,OAAQ,IAAK,KAAM,GAAG,EAAE,KAAK,UAAU,EACvEgF,EAAa,IAAIhF,EAAe,OAAQ,IAAK,KAAM,GAAG,EAAE,KAAK,UAAU,EAEvE4E,EAAI,KAAI,CACV,CAEA,SAASjE,GAAiB,CACxBb,EAAO,OAAS,OAAO,WAAa,OAAO,YAC3CA,EAAO,uBAAsB,EAE7BJ,EAAS,QAAQ,OAAO,WAAY,OAAO,WAAW,EAEtDO,EAAa,gBAAe,EAAG,QAC3B,OAAO,WAAa,OAAO,iBAC3B,OAAO,YAAc,OAAO,gBAClC,EAGEC,EAAS,QAAQ,OAAO,WAAY,OAAO,WAAW,EAGtDC,EAAY,SAAS,YAAe,MAAQ,OAAO,WAAa,OAAO,iBACvEA,EAAY,SAAS,aAAgB,MAAQ,OAAO,YAAc,OAAO,gBAC3E,CACA8E,EAAqBnF,CAAM,EAE3B,SAASc,GAAU,CACjB,sBAAsBA,CAAO,EAIzBP,IACFA,EAAS,SAAS,GAAK,MAGzBH,EAAS,OAAM,CACjB"}